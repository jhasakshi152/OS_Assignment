#include<stdio.h>
#include<conio.h>

int main()
{
	int Process,j,number,Current_time,Remaining_Process,signal=0,time,wait=0,turn_around_time=0;
	int arrival_time[10],burst_time[10],remaining_time[10],iteration=1;
	printf("Number of Processes you want : ");
	scanf("%d",&number);
	Remaining_Process = number;

//	printf("\nFeed the data : \n");
	printf("Process\t\tArrival Time\t\tBurst Time\n");
	for(Process = 1;Process <= number;Process++)
	{
		printf("\nP%d\t\t",Process);
		scanf("%d",&arrival_time[Process]);
		scanf("%d",&burst_time[Process]);
		remaining_time[Process]=burst_time[Process];
	}
	printf("The time for first iteration is 6.\n");
	time=6;
	Current_time=0;
	for(Process=0;Remaining_Process!=0;)
	{
		if(remaining_time[Process]<=time && remaining_time[Process]>0)
		{
			Current_time+=remaining_time[Process];
			remaining_time[Process]=0;
			signal=1;
		}
		else if(remaining_time[Process]>0)
		{
			remaining_time[Process]-=time;
			Current_time+=time;
		}
		if(remaining_time[Process]==0 && signal==1)
		{ printf("%d",Process);
			Remaining_Process--;
			printf("P%d",Process+1);
			printf("\t\t%d",Current_time - arrival_time[Process]);
			printf("\t\t%d\n",Current_time - burst_time[Process] - arrival_time[Process]);
			wait+=Current_time - arrival_time[Process] - burst_time[Process];
			turn_around_time += Current_time - arrival_time[Process];
			signal=0;

		}
		if(Process==number-1){
			iteration++;
			if(iteration==2){
				Process=0;
				time=10;
				printf("The time for second iteration is 10. \n");
			}
			else{
				break;
			}
		}
		else if(Current_time >= arrival_time[Process+1]){
			Process++;
		}
		else{
			Process=0;
		}
	}
	return 0;
}
